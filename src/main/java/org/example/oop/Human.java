package org.example.oop;

/**
 * Класс состоит из:
 * 1) поля/свойства
 * 2) конструкторы
 * 3) методы
 *
 * Основные понятия:
 * 1) инициализация чего-либо - это создание или заполнение чего-либо
 * 2) конкатенация строк - это соединение строк в одну строку с помощью оператора +
 * 3) debugger - это инструмент в idea, который позволяет исследовать построчно код
 * 4) для того, чтобы остановить компилятор на какой-то определднной строчке, мы должны использовать breakpoints (точки останова)
 * 5) локальная переменная - это переменная, область видимости которой находится внутри блока, и после выхода из него
 * переменная уничтожается
 * в качестве блока кода может быть метод, констуктор, статические/нестатические блоки кода и т д
 *
 * 6) сигнатура метода - это взвращаемый тип + название + входные параметры
 */
public class Human {
    /**
     * Поля - это свойства/характеристики объекта
     *
     * Модификаторы доступа - это специальные ключевын слова в java, которые указывают область видимости чего-либо,
     * модификторы доступа могут применяться почти к чему-угодно
     * Есть 4 модификтора доступа:
     * 1) public - доступен всегда и везде
     * 2) private - доступен только внутри класса
     * 3) default (package-private) - доступен внутри пакета, если модификатор доступа отсутствует,
     * то по умолчанию модификатор доступа будет как default
     * 4) protected - доступен внутри пакета + вне пакета в классах наследниках
     */
    private String name;
    private int age;
    private double height;
    private double weight;

    /**
     * Конструктор - это некий блок кода, с помощью которого создается объект класса
     * Конструктор всегда вызывается только 1 раз при создании объекта
     * Конструкторов может быть сколько угодно много, это назыавется перегрузкой конструтора
     * Конструктор не возвращает никаких значений, в отличие от методов
     * Конструктор всегда называется по имени класса
     *
     * Конструктор по умолчанию, который есть всегда и его не нужно прописывать
<<<<<<< HEAD
=======
     * Если мы создаем свои констукторы, то конструктор по умолчанию пропадает и если хотим его использовать,
     * то необходимо его указывать уже явно
>>>>>>> 953a73a (lesson from 09.08.25)
     */

    public Human(String name , int age , double height , double weight) {
        this.name = name;
        this.age = age;
        this.height = height;
        this.weight = weight;
    }

    /**
     * this - это ключевое слово, которое хранит в себе ссылку на тот объект, на котором был вызван конструктор/метод
     * this.name === arseniy.name
     */
    public Human(String name){
        this.name = name;
    }

    public Human(){
<<<<<<< HEAD
        System.out.println("hello from constructor");
    }


=======
        System.out.println("hello world");
    }

>>>>>>> 953a73a (lesson from 09.08.25)
    /**
     * Метод - это некое поведение объекта
     * Структура метода
     * 1) модификтор доступа
     * 2) тип возвращаемого значения (String, int, boolean и т д), если метод ничего не возвращает, тогда указываем void
     * 3) имя метода
     * 4) входные параметры в формате <Тип данных1> <имя переменной1>, .., <Тип данныхN> <имя переменнойN>
     * 5) если у нас есть типо вовзращаемого значения, то тогда в конце метода возвращаем знаечние с помощью ключевого слова return
     */
    public void sayHello(String name){
        System.out.println("hello world from " + name);
    }

    public int function(int x){
        return x * 2;
    }
}